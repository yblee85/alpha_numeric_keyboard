

import javax.swing.*;

import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.List;

public class AlphaNumKeyBoard extends JDialog implements ActionListener, KeyListener {
	private static final long serialVersionUID = 1L;
	/**
	 * @uml.property  name="caps"
	 */
	private boolean caps = false;
	private boolean shift = false;
	/**
	 * @uml.property  name="position"
	 */
	private int position;
	/**
	 * @uml.property  name="loginPassword"
	 */
	private boolean loginPassword;
	/**
	 * @uml.property  name="loginName"
	 */
	private boolean loginName;
	/**
	 * @uml.property  name="enterListener"
	 * @uml.associationEnd  multiplicity="(1 1)" inverse="this$0:gui.AlphaNumKeyBoard$EnterListener"
	 */
	private EnterListener enterListener; 
	/**
	 * @uml.property  name="escListener"
	 * @uml.associationEnd  multiplicity="(1 1)" inverse="this$0:gui.AlphaNumKeyBoard$EscListener"
	 */
	private EscListener escListener;
	
	// this relatedComponent is used to be consistent with ESC and Enter action event
	private Component relatedComponent;
	
	// list of buttons in keyboard
	private List <JButton> keyBoardButtons;
	private List <JButton> numPadButtons;
	private List <JButton> specialCharButtons;
	
	/** Creates new form AlphaNumKeyBoard */
	public AlphaNumKeyBoard() {
		enterListener = new EnterListener();
		escListener = new EscListener();
		setModalityType(ModalityType.APPLICATION_MODAL);
		initComponents();
	}
	
	public AlphaNumKeyBoard(Component relatedComponent){
		this();
		this.relatedComponent = relatedComponent;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents() {		
		jplKeyBoardPanel = new JPanel();
		lblGetterText = new JLabel();
		txtInputField = new JTextField();
		txtPassField = new JPasswordField();
		
		// buttons
		btnCaps = new JButton();
		btn1 = new JButton();
		btn2 = new JButton();
		btn3 = new JButton();
		btn4 = new JButton();
		btn5 = new JButton();
		btn6 = new JButton();
		btn7 = new JButton();
		btn8 = new JButton();
		btn9 = new JButton();
		btn0 = new JButton();
		btnequals = new JButton();
		btnBackSpace = new JButton();
		btnAsc1 = new JButton();
		btnw = new JButton();
		btne = new JButton();
		btnr = new JButton();
		btnt = new JButton();
		btny = new JButton();
		btnu = new JButton();
		btni = new JButton();
		btno = new JButton();
		btnp = new JButton();
		btnLeftBracket = new JButton();
		btnRightBracket = new JButton();
		btnq = new JButton();
		btna = new JButton();
		btns = new JButton();
		btnd = new JButton();
		btnf = new JButton();
		btng = new JButton();
		btnh = new JButton();
		btnj = new JButton();
		btnk = new JButton();
		btnl = new JButton();
		btnSemiColumn = new JButton();
		btnApros = new JButton();
		btnAt = new JButton();
		btnz = new JButton();
		btnx = new JButton();
		btnc = new JButton();
		btnv = new JButton();
		btnb = new JButton();
		btnn = new JButton();
		btnm = new JButton();
		btnComma = new JButton();
		btnFullStop = new JButton();
		btnSlash = new JButton();
		btnQuestion = new JButton();	
		btnEnter = new JButton();
		btnShift = new JButton();
		btnAsc3 = new JButton();
		btnAsc4 = new JButton();
		btnAsc5 = new JButton();
		btnAsc6 = new JButton();
		btnAsc7 = new JButton();
		btnAsc8 = new JButton();
		btnAsc9 = new JButton();
		btnAsc10 = new JButton();
		btnAsc11 = new JButton();
		btnAsc12 = new JButton();
		btnRight = new JButton();
		btnAsc2 = new JButton();
		btnEmpty1 = new JButton();
		btnEmpty2 = new JButton();
		btnLeft = new JButton();
		btnSpace = new JButton();
		btnEmpty3 = new JButton();
		btnEmpty4 = new JButton();
		btnDelete = new JButton();
		btnAsc13 = new JButton();
		btnUp = new JButton();
		btnDown = new JButton();
		btnEmpty5 = new JButton();
		btnEsc = new JButton();
		btnBesideEsc = new JButton();
		btnR7 = new JButton();
		btnR8 = new JButton();
		btnR9 = new JButton();
		btnR1 = new JButton();
		btnR4 = new JButton();
		btnR2 = new JButton();
		btnR5 = new JButton();
		btnR6 = new JButton();
		btnR3 = new JButton();
		btnR0 = new JButton();
		btnR00 = new JButton();
		btnREnter = new JButton();
		btnRStop = new JButton();

		keyBoardButtons = new ArrayList <JButton>();
		numPadButtons = new ArrayList <JButton>();
		specialCharButtons = new ArrayList <JButton>();
		
		
		keyBoardButtons.add(btn1);
		keyBoardButtons.add(btn2);
		keyBoardButtons.add(btn3);
		keyBoardButtons.add(btn4);
		keyBoardButtons.add(btn5);
		keyBoardButtons.add(btn6);
		keyBoardButtons.add(btn7);
		keyBoardButtons.add(btn8);
		keyBoardButtons.add(btn9);
		keyBoardButtons.add(btn0);
		
		keyBoardButtons.add(btnw);
		keyBoardButtons.add(btne);
		keyBoardButtons.add(btnr);
		keyBoardButtons.add(btnt);
		keyBoardButtons.add(btny);
		keyBoardButtons.add(btnu);
		keyBoardButtons.add(btni);
		keyBoardButtons.add(btno);
		keyBoardButtons.add(btnp);
		keyBoardButtons.add(btnLeftBracket);
		keyBoardButtons.add(btnRightBracket);
		keyBoardButtons.add(btnq);
		keyBoardButtons.add(btna);
		keyBoardButtons.add(btns);
		keyBoardButtons.add(btnd);
		keyBoardButtons.add(btnf);
		keyBoardButtons.add(btng);
		keyBoardButtons.add(btnh);
		keyBoardButtons.add(btnj);
		keyBoardButtons.add(btnk);
		keyBoardButtons.add(btnl);
		keyBoardButtons.add(btnz);
		keyBoardButtons.add(btnx);
		keyBoardButtons.add(btnc);
		keyBoardButtons.add(btnv);
		keyBoardButtons.add(btnb);
		keyBoardButtons.add(btnn);
		keyBoardButtons.add(btnm);
		keyBoardButtons.add(btnSemiColumn);
		keyBoardButtons.add(btnApros);
		keyBoardButtons.add(btnAt);
		keyBoardButtons.add(btnComma);
		keyBoardButtons.add(btnFullStop);
		keyBoardButtons.add(btnSlash);
		keyBoardButtons.add(btnQuestion);

		
		numPadButtons.add(btnDelete);
		numPadButtons.add(btnEsc);
		numPadButtons.add(btnBesideEsc);
		numPadButtons.add(btnR7);
		numPadButtons.add(btnR8);
		numPadButtons.add(btnR9);
		numPadButtons.add(btnR1);
		numPadButtons.add(btnR4);	
		numPadButtons.add(btnR2);
		numPadButtons.add(btnR5);
		numPadButtons.add(btnR6);
		numPadButtons.add(btnR3);
		numPadButtons.add(btnR0);
		numPadButtons.add(btnR00);
		numPadButtons.add(btnREnter);
		numPadButtons.add(btnRStop);
			
		
		specialCharButtons.add(btnBackSpace);
		specialCharButtons.add(btnequals);
		specialCharButtons.add(btnShift);
		specialCharButtons.add(btnShift);
		specialCharButtons.add(btnEmpty1);
		specialCharButtons.add(btnEmpty2);
		specialCharButtons.add(btnDown);
		specialCharButtons.add(btnUp);
		specialCharButtons.add(btnRight);
		specialCharButtons.add(btnAsc2);
		specialCharButtons.add(btnLeft);
		specialCharButtons.add(btnSpace);
		specialCharButtons.add(btnEmpty3);
		specialCharButtons.add(btnEmpty4);
		specialCharButtons.add(btnAsc13);
		specialCharButtons.add(btnEmpty5);
		specialCharButtons.add(btnEnter);
		
		keyBoardButtons.add(btnAsc1);
		keyBoardButtons.add(btnCaps);
		
		specialCharButtons.add(btnAsc3);
		specialCharButtons.add(btnAsc4);	
		specialCharButtons.add(btnAsc5);	
		specialCharButtons.add(btnAsc6);	
		specialCharButtons.add(btnAsc7);	
		specialCharButtons.add(btnAsc8);
		specialCharButtons.add(btnAsc9);
		specialCharButtons.add(btnAsc10);
		specialCharButtons.add(btnAsc11);
		specialCharButtons.add(btnAsc12);
		
		setKeyBoardButtonColor();
		//setNumPadButtonColor();
		//setSpecialCharButtonsColor();
		
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		setResizable(false);
		setUndecorated(true);
		final Color BLUE = new Color(129, 176, 217);
		jplKeyBoardPanel.setBackground(BLUE);
		jplKeyBoardPanel.setPreferredSize(new Dimension(800, 300));
		jplKeyBoardPanel.setLayout(null);

		lblGetterText.setFont(new Font("Arial", 1, 12));
		lblGetterText.setHorizontalAlignment(SwingConstants.RIGHT);
		lblGetterText.setText("Description:");
		lblGetterText.setPreferredSize(new Dimension(66, 22));
		jplKeyBoardPanel.add(lblGetterText);
		lblGetterText.setBounds(10, 0, 120, 30);
		
		jplKeyBoardPanel.add(txtInputField);
		txtInputField.setBounds(140, 0, 510, 30);
		txtInputField.requestFocusInWindow();
		txtInputField.addKeyListener(this);
		
		jplKeyBoardPanel.add(txtPassField);
		txtPassField.setBounds(140, 0, 510, 30);
		txtPassField.requestFocusInWindow();
		txtPassField.setVisible(false);
		txtPassField.addKeyListener(this);

		//btnCaps.setBackground(new Color(153, 255, 153));
		btnCaps.setFont(new Font("Segoe UI", 2, 12));
		btnCaps.setText("Caps");
		jplKeyBoardPanel.add(btnCaps);
		btnCaps.setBounds(0, 128, 70, 42);

		//btn1.setBackground(new Color(153, 255, 153));
		btn1.setText("1");
		jplKeyBoardPanel.add(btn1);
		btn1.setBounds(45, 43, 44, 42);

		//btn2.setBackground(new Color(255, 255, 153));
		btn2.setText("2");
		jplKeyBoardPanel.add(btn2);
		btn2.setBounds(90, 43, 44, 42);

		//btn3.setBackground(new Color(255, 255, 153));
		btn3.setText("3");
		jplKeyBoardPanel.add(btn3);
		btn3.setBounds(135, 43, 44, 42);

		//btn4.setBackground(new Color(255, 102, 102));
		btn4.setText("4");
		jplKeyBoardPanel.add(btn4);
		btn4.setBounds(180, 43, 44, 42);

		//btn5.setBackground(new Color(153, 255, 153));
		btn5.setText("5");
		jplKeyBoardPanel.add(btn5);
		btn5.setBounds(225, 43, 44, 42);

		//btn6.setBackground(new Color(255, 102, 102));
		btn6.setText("6");
		jplKeyBoardPanel.add(btn6);
		btn6.setBounds(270, 43, 44, 42);

		//btn7.setBackground(new Color(153, 255, 204));
		btn7.setText("7");
		jplKeyBoardPanel.add(btn7);
		btn7.setBounds(315, 43, 44, 42);

		//btn8.setBackground(new Color(153, 255, 204));
		btn8.setText("8");
		jplKeyBoardPanel.add(btn8);
		btn8.setBounds(360, 43, 44, 42);

		//btn9.setBackground(new Color(255, 255, 153));
		btn9.setText("9");
		jplKeyBoardPanel.add(btn9);
		btn9.setBounds(405, 43, 44, 42);

		//btn0.setBackground(new Color(255, 255, 153));
		btn0.setText("0");
		jplKeyBoardPanel.add(btn0);
		btn0.setBounds(450, 43, 44, 42);

		//btnequals.setBackground(new Color(255, 255, 153));
		btnequals.setText("=");
		jplKeyBoardPanel.add(btnequals);
		btnequals.setBounds(495, 43, 44, 42);

		//btnBackSpace.setBackground(new Color(255, 255, 153));
		btnBackSpace.setText("<---");
		jplKeyBoardPanel.add(btnBackSpace);
		btnBackSpace.setBounds(540, 43, 80, 42);

		//btnAsc1.setBackground(new Color(153, 255, 153));
		btnAsc1.setText("`");
		jplKeyBoardPanel.add(btnAsc1);
		btnAsc1.setBounds(0, 43, 44, 42);

		//btnw.setBackground(new Color(153, 255, 153));
		btnw.setText("W");
		jplKeyBoardPanel.add(btnw);
		btnw.setBounds(45, 85, 54, 42);

		//btne.setBackground(new Color(255, 255, 153));
		btne.setText("E");
		jplKeyBoardPanel.add(btne);
		btne.setBounds(100, 85, 44, 42);

		//btnr.setBackground(new Color(255, 255, 153));
		btnr.setText("R");
		jplKeyBoardPanel.add(btnr);
		btnr.setBounds(145, 85, 44, 42);

		//btnt.setBackground(new Color(255, 102, 102));
		btnt.setText("T");
		jplKeyBoardPanel.add(btnt);
		btnt.setBounds(190, 85, 44, 42);

		//btny.setBackground(new Color(153, 255, 153));
		btny.setText("Y");
		jplKeyBoardPanel.add(btny);
		btny.setBounds(235, 85, 44, 42);

		//btnu.setBackground(new Color(255, 102, 102));
		btnu.setText("U");
		jplKeyBoardPanel.add(btnu);
		btnu.setBounds(280, 85, 44, 42);

		//btni.setBackground(new Color(153, 255, 204));
		btni.setText("I");
		jplKeyBoardPanel.add(btni);
		btni.setBounds(325, 85, 44, 42);

		//btno.setBackground(new Color(153, 255, 204));
		btno.setText("O");
		jplKeyBoardPanel.add(btno);
		btno.setBounds(370, 85, 44, 42);

		//btnp.setBackground(new Color(255, 255, 153));
		btnp.setText("P");
		jplKeyBoardPanel.add(btnp);
		btnp.setBounds(415, 85, 44, 42);

		//btnLeftBracket.setBackground(new Color(255, 255, 153));
		btnLeftBracket.setText("[");
		jplKeyBoardPanel.add(btnLeftBracket);
		btnLeftBracket.setBounds(460, 85, 44, 42);

		//btnRightBracket.setBackground(new Color(255, 255, 153));
		btnRightBracket.setText("]");
		jplKeyBoardPanel.add(btnRightBracket);
		btnRightBracket.setBounds(505, 85, 50, 42);

		//btnq.setBackground(new Color(153, 255, 153));
		btnq.setText("Q");
		jplKeyBoardPanel.add(btnq);
		btnq.setBounds(0, 85, 44, 42);

		//btna.setBackground(new Color(153, 255, 153));
		btna.setText("A");
		jplKeyBoardPanel.add(btna);
		btna.setBounds(70, 128, 44, 42);

		//btns.setBackground(new Color(255, 255, 153));
		btns.setText("S");
		jplKeyBoardPanel.add(btns);
		btns.setBounds(115, 128, 44, 42);

		//btnd.setBackground(new Color(255, 255, 153));
		btnd.setText("D");
		jplKeyBoardPanel.add(btnd);
		btnd.setBounds(160, 128, 44, 42);

		//btnf.setBackground(new Color(255, 102, 102));
		btnf.setText("F");
		jplKeyBoardPanel.add(btnf);
		btnf.setBounds(205, 128, 44, 42);

		//btng.setBackground(new Color(153, 255, 153));
		btng.setText("G");
		jplKeyBoardPanel.add(btng);
		btng.setBounds(250, 128, 44, 42);

		//btnh.setBackground(new Color(255, 102, 102));
		btnh.setText("H");
		jplKeyBoardPanel.add(btnh);
		btnh.setBounds(295, 128, 44, 42);

		//btnj.setBackground(new Color(153, 255, 204));
		btnj.setText("J");
		jplKeyBoardPanel.add(btnj);
		btnj.setBounds(340, 128, 44, 42);

		//btnk.setBackground(new Color(153, 255, 204));
		btnk.setText("K");
		jplKeyBoardPanel.add(btnk);
		btnk.setBounds(385, 128, 44, 42);

		//btnl.setBackground(new Color(255, 255, 153));
		btnl.setText("L");
		jplKeyBoardPanel.add(btnl);
		btnl.setBounds(430, 128, 44, 42);

		//btnSemiColumn.setBackground(new Color(255, 255, 153));
		btnSemiColumn.setText(";");
		jplKeyBoardPanel.add(btnSemiColumn);
		btnSemiColumn.setBounds(475, 128, 40, 42);

		//btnApros.setBackground(new Color(255, 255, 153));
		btnApros.setFont(new Font("Segoe UI", 0, 11));
		btnApros.setText("'");
		jplKeyBoardPanel.add(btnApros);
		btnApros.setBounds(515, 128, 40, 42);

		//btnAt.setBackground(new Color(204, 255, 204));
		btnAt.setFont(new Font("Segoe UI", 0, 10));
		btnAt.setText("@");
		jplKeyBoardPanel.add(btnAt);
		btnAt.setBounds(0, 170, 44, 42);

		//btnz.setBackground(new Color(153, 255, 153));
		btnz.setText("Z");
		jplKeyBoardPanel.add(btnz);
		btnz.setBounds(45, 170, 44, 42);

		//btnx.setBackground(new Color(153, 255, 153));
		btnx.setText("X");
		jplKeyBoardPanel.add(btnx);
		btnx.setBounds(90, 170, 44, 42);

		//btnc.setBackground(new Color(255, 255, 153));
		btnc.setText("C");
		jplKeyBoardPanel.add(btnc);
		btnc.setBounds(135, 170, 44, 42);

		//btnv.setBackground(new Color(255, 255, 153));
		btnv.setText("V");
		jplKeyBoardPanel.add(btnv);
		btnv.setBounds(180, 170, 44, 42);

		//btnb.setBackground(new Color(255, 102, 102));
		btnb.setText("B");
		jplKeyBoardPanel.add(btnb);
		btnb.setBounds(225, 170, 44, 42);

		//btnn.setBackground(new Color(153, 255, 153));
		btnn.setText("N");
		jplKeyBoardPanel.add(btnn);
		btnn.setBounds(270, 170, 44, 42);

		//btnm.setBackground(new Color(255, 102, 102));
		btnm.setText("M");
		jplKeyBoardPanel.add(btnm);
		btnm.setMargin(null);
		btnm.setMargin(new Insets(0, 0, 0, 0));
		btnm.setBounds(315, 170, 44, 42);

		//btnComma.setBackground(new Color(153, 255, 204));
		btnComma.setText(",");
		jplKeyBoardPanel.add(btnComma);
		btnComma.setBounds(360, 170, 44, 42);

		//btnFullStop.setBackground(new Color(153, 255, 204));
		btnFullStop.setText(".");
		jplKeyBoardPanel.add(btnFullStop);
		btnFullStop.setBounds(405, 170, 44, 42);

		//btnSlash.setBackground(new Color(255, 255, 153));
		btnSlash.setText("/");
		jplKeyBoardPanel.add(btnSlash);
		btnSlash.setBounds(450, 170, 44, 42);

		//btnQuestion.setBackground(new Color(255, 255, 153));
		btnQuestion.setText("?");
		jplKeyBoardPanel.add(btnQuestion);
		btnQuestion.setBounds(495, 170, 44, 42);

		//btnEnter.setBackground(new Color(255, 255, 153));
		btnEnter.setFont(new Font("Segoe UI", 2, 12));
		btnEnter.setText("Enter");
		jplKeyBoardPanel.add(btnEnter);
		btnEnter.setBounds(555, 85, 65, 85);
		btnEnter.addActionListener(enterListener);

		//btnShift.setBackground(new Color(255, 255, 153));
		btnShift.setFont(new Font("Segoe UI", 2, 12));
		btnShift.setText("Shift");
		jplKeyBoardPanel.add(btnShift);
		btnShift.setBounds(540, 170, 80, 42);

		//btnAsc3.setBackground(new Color(204, 255, 204));
		btnAsc3.setText("!");
		jplKeyBoardPanel.add(btnAsc3);
		btnAsc3.setBounds(45, 212, 44, 42);

		//btnAsc4.setBackground(new Color(204, 255, 204));
		btnAsc4.setText("#");
		jplKeyBoardPanel.add(btnAsc4);
		btnAsc4.setBounds(90, 212, 44, 42);

		//btnAsc5.setBackground(new Color(204, 255, 204));
		btnAsc5.setText("$");
		jplKeyBoardPanel.add(btnAsc5);
		btnAsc5.setBounds(135, 212, 44, 42);

		//btnAsc6.setBackground(new Color(204, 255, 204));
		btnAsc6.setText("%");
		jplKeyBoardPanel.add(btnAsc6);
		btnAsc6.setBounds(180, 212, 44, 42);

		//btnAsc7.setBackground(new Color(204, 255, 204));
		btnAsc7.setText("^");
		jplKeyBoardPanel.add(btnAsc7);
		btnAsc7.setBounds(225, 212, 44, 42);

		//btnAsc8.setBackground(new Color(204, 255, 204));
		btnAsc8.setText("&");
		jplKeyBoardPanel.add(btnAsc8);
		btnAsc8.setBounds(270, 212, 44, 42);

		//btnAsc9.setBackground(new Color(204, 255, 204));
		btnAsc9.setText("*");
		jplKeyBoardPanel.add(btnAsc9);
		btnAsc9.setBounds(315, 212, 44, 42);

		//btnAsc10.setBackground(new Color(204, 255, 204));
		btnAsc10.setText("(");
		jplKeyBoardPanel.add(btnAsc10);
		btnAsc10.setBounds(360, 212, 44, 42);

		//btnAsc11.setBackground(new Color(204, 255, 204));
		btnAsc11.setText(")");
		jplKeyBoardPanel.add(btnAsc11);
		btnAsc11.setBounds(405, 212, 44, 42);

		//btnAsc12.setBackground(new Color(204, 255, 204));
		btnAsc12.setText("-");
		jplKeyBoardPanel.add(btnAsc12);
		btnAsc12.setBounds(450, 212, 44, 42);

		//btnAsc2.setBackground(new Color(204, 255, 204));
		btnAsc2.setText("~");
		jplKeyBoardPanel.add(btnAsc2);
		btnAsc2.setBounds(0, 212, 44, 42);

		//btnEmpty1.setBackground(new Color(204, 204, 204));
		jplKeyBoardPanel.add(btnEmpty1);
		btnEmpty1.setBounds(0, 255, 44, 42);

		//btnEmpty2.setBackground(new Color(204, 204, 204));
		jplKeyBoardPanel.add(btnEmpty2);
		btnEmpty2.setBounds(45, 255, 44, 42);

		//btnSpace.setBackground(new Color(204, 204, 204));
		btnSpace.setFont(new Font("Segoe UI", 2, 12));
		btnSpace.setText("Space");
		jplKeyBoardPanel.add(btnSpace);
		btnSpace.setBounds(135, 255, 270, 42);

		//btnEmpty3.setBackground(new Color(204, 204, 204));
		jplKeyBoardPanel.add(btnEmpty3);
		btnEmpty3.setBounds(90, 255, 44, 42);

		//btnEmpty4.setBackground(new Color(204, 204, 204));
		jplKeyBoardPanel.add(btnEmpty4);
		btnEmpty4.setBounds(405, 255, 44, 42);

//		btnDelete.setIcon(new ImageIcon(getClass().getResource(
//				"/assets/delete.png"))); // NOI18N
		jplKeyBoardPanel.add(btnDelete);
		btnDelete.setBounds(665, 43, 44, 42);
		btnDelete.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				txtInputField.setText("");
				txtPassField.setText("");
			}
		});

		//btnAsc13.setBackground(new Color(204, 255, 204));
		btnAsc13.setText("_");
		jplKeyBoardPanel.add(btnAsc13);
		btnAsc13.setBounds(495, 212, 44, 42);

		/* 
		btnLeft.setBackground(new Color(255, 255, 204));
		btnLeft.setIcon(new ImageIcon(getClass().getResource(
				"/assets/arrowleft.png"))); // NOI18N
		jplKeyBoardPanel.add(btnLeft);
		btnLeft.setBounds(495, 255, 44, 42);
		
		btnUp.setBackground(new Color(255, 255, 204));
		btnUp.setIcon(new ImageIcon(getClass().getResource(
				"/assets/arrowup.png"))); // NOI18N
		jplKeyBoardPanel.add(btnUp);
		btnUp.setBounds(540, 212, 44, 42);

		btnDown.setBackground(new Color(255, 255, 204));
		btnDown.setIcon(new ImageIcon(getClass().getResource(
				"/assets/arrowdown.png"))); // NOI18N
		jplKeyBoardPanel.add(btnDown);
		btnDown.setBounds(540, 255, 44, 42);
		
		btnRight.setBackground(new Color(255, 255, 204));
		btnRight.setIcon(new ImageIcon(getClass().getResource(
				"/assets/arrowright.png"))); // NOI18N
		jplKeyBoardPanel.add(btnRight);
		btnRight.setBounds(585, 255, 44, 42);		
		*/

		//btnEmpty5.setBackground(new Color(204, 204, 204));
		jplKeyBoardPanel.add(btnEmpty5);
		btnEmpty5.setBounds(450, 255, 44, 42);

		//btnEsc.setIcon(new ImageIcon(getClass().getResource("/assets/esc.png"))); // NOI18N
		jplKeyBoardPanel.add(btnEsc);
		btnEsc.setBounds(755, 43, 44, 42);
		btnEsc.addActionListener(escListener);
		
		jplKeyBoardPanel.add(btnBesideEsc);
		btnBesideEsc.setBounds(710, 43, 44, 42);

		//btnR7.setBackground(new Color(204, 204, 204));
		btnR7.setText("7");
		jplKeyBoardPanel.add(btnR7);
		btnR7.setBounds(665, 85, 44, 42);

		//btnR8.setBackground(new Color(204, 204, 204));
		btnR8.setText("8");
		jplKeyBoardPanel.add(btnR8);
		btnR8.setBounds(710, 85, 44, 42);

		//btnR9.setBackground(new Color(204, 204, 204));
		btnR9.setText("9");
		jplKeyBoardPanel.add(btnR9);
		btnR9.setBounds(755, 85, 44, 42);

		//btnR1.setBackground(new Color(204, 204, 204));
		btnR1.setText("1");
		jplKeyBoardPanel.add(btnR1);
		btnR1.setBounds(665, 170, 44, 42);

		//btnR4.setBackground(new Color(204, 204, 204));
		btnR4.setText("4");
		jplKeyBoardPanel.add(btnR4);
		btnR4.setBounds(665, 128, 44, 42);

		//btnR2.setBackground(new Color(204, 204, 204));
		btnR2.setText("2");
		jplKeyBoardPanel.add(btnR2);
		btnR2.setBounds(710, 170, 44, 42);

		//btnR5.setBackground(new Color(204, 204, 204));
		btnR5.setText("5");
		jplKeyBoardPanel.add(btnR5);
		btnR5.setBounds(710, 128, 44, 42);

		//btnR6.setBackground(new Color(204, 204, 204));
		btnR6.setText("6");
		jplKeyBoardPanel.add(btnR6);
		btnR6.setBounds(755, 128, 44, 42);

		//btnR3.setBackground(new Color(204, 204, 204));
		btnR3.setText("3");
		jplKeyBoardPanel.add(btnR3);
		btnR3.setBounds(755, 170, 44, 42);

		//btnR0.setBackground(new Color(204, 204, 204));
		btnR0.setText("0");
		jplKeyBoardPanel.add(btnR0);
		btnR0.setBounds(665, 212, 44, 42);

		//btnR00.setBackground(new Color(204, 204, 204));
		btnR00.setFont(new Font("Segoe UI", 0, 10));
		btnR00.setText("00");
		jplKeyBoardPanel.add(btnR00);
		btnR00.setBounds(710, 212, 44, 42);

		//btnREnter.setBackground(new Color(204, 204, 204));
		btnREnter.setText("Enter");
		jplKeyBoardPanel.add(btnREnter);
		btnREnter.setBounds(665, 255, 135, 42);
		btnREnter.addActionListener(enterListener);

		//btnRStop.setBackground(new Color(204, 204, 204));
		btnRStop.setText(".");
		jplKeyBoardPanel.add(btnRStop);
		btnRStop.setBounds(755, 212, 44, 42);

		GroupLayout layout = new GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addComponent(jplKeyBoardPanel,
								GroupLayout.PREFERRED_SIZE,
								GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addComponent(jplKeyBoardPanel,
								GroupLayout.PREFERRED_SIZE,
								GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));

		Dimension screenSize = Toolkit.getDefaultToolkit()
				.getScreenSize();
		setBounds((screenSize.width - 800) / 2, ((screenSize.height - 300) + 300) / 2,
				800, 300);
		
		/* add actions listeners to buttons */
		btna.addActionListener(this);
		btnb.addActionListener(this);
		btnc.addActionListener(this);
		btnd.addActionListener(this);
		btne.addActionListener(this);
		btnf.addActionListener(this);
		btng.addActionListener(this);
		btnh.addActionListener(this);
		btni.addActionListener(this);
		btnj.addActionListener(this);
		btnk.addActionListener(this);
		btnl.addActionListener(this);
		btnm.addActionListener(this);
		btnn.addActionListener(this);
		btno.addActionListener(this);
		btnp.addActionListener(this);
		btnq.addActionListener(this);
		btnr.addActionListener(this);
		btns.addActionListener(this);
		btnt.addActionListener(this);
		btnu.addActionListener(this);
		btnv.addActionListener(this);
		btnw.addActionListener(this);
		btnx.addActionListener(this);
		btny.addActionListener(this);
		btnz.addActionListener(this);
		btn0.addActionListener(this);
		btn1.addActionListener(this);
		btn2.addActionListener(this);
		btn3.addActionListener(this);
		btn4.addActionListener(this);
		btn5.addActionListener(this);
		btn6.addActionListener(this);
		btn7.addActionListener(this);
		btn8.addActionListener(this);
		btn9.addActionListener(this);
		btnApros.addActionListener(this);
		btnAsc1.addActionListener(this);
		btnAsc10.addActionListener(this);
		btnAsc11.addActionListener(this);
		btnAsc12.addActionListener(this);
		btnAsc13.addActionListener(this);
		btnAsc2.addActionListener(this);
		btnAsc3.addActionListener(this);
		btnAsc4.addActionListener(this);
		btnAsc5.addActionListener(this);
		btnAsc6.addActionListener(this);
		btnAsc7.addActionListener(this);
		btnAsc8.addActionListener(this);
		btnAsc9.addActionListener(this);
		btnAt.addActionListener(this);
		btnBackSpace.addActionListener(this);
		btnCaps.addActionListener(this);
		btnComma.addActionListener(this);
		btnDown.addActionListener(this);
		btnEmpty1.addActionListener(this);
		btnEmpty2.addActionListener(this);
		btnEmpty3.addActionListener(this);
		btnEmpty4.addActionListener(this);
		btnEmpty5.addActionListener(this);
		btnEnter.addActionListener(this);
		btnFullStop.addActionListener(this);
		btnLeft.addActionListener(this);
		btnLeftBracket.addActionListener(this);
		btnQuestion.addActionListener(this);
		btnR0.addActionListener(this);
		btnR00.addActionListener(this);
		btnR1.addActionListener(this);
		btnR2.addActionListener(this);
		btnR3.addActionListener(this);
		btnR4.addActionListener(this);
		btnR5.addActionListener(this);
		btnR6.addActionListener(this);
		btnR7.addActionListener(this);
		btnR8.addActionListener(this);
		btnR9.addActionListener(this);
		btnREnter.addActionListener(this);
		btnRStop.addActionListener(this);
		btnRight.addActionListener(this);
		btnRightBracket.addActionListener(this);
		btnSemiColumn.addActionListener(this);
		btnShift.addActionListener(this);
		btnSlash.addActionListener(this);
		btnSpace.addActionListener(this);
		btnUp.addActionListener(this);
		btnequals.addActionListener(this);
		btnDelete.addActionListener(this);
		btnEsc.addActionListener(this);
		btnBesideEsc.addActionListener(this);
		setCaps();
		setShfit();
	}// </editor-fold>
	//GEN-END:initComponents
	
	private void setKeyBoardButtonColor() {
		for(JButton button: keyBoardButtons){
			final Color LIGHT_YELLOW = new Color(255, 255, 153);
			button.setBackground(LIGHT_YELLOW);
			
			//button.setBackground(new Color(176, 217, 129));
		}	
		//btnEsc.setBackground(new Color(255, 255, 153));
		//btnEsc.setText("Esc");
		
		//btnDelete.setBackground(new Color(255, 255, 153));
		//btnDelete.setText("Delete");
		btnEsc.setIcon(new ImageIcon(getClass().getResource("/assets/esc.png"))); // NOI18N
		btnDelete.setIcon(new ImageIcon(getClass().getResource(
				"/assets/delete.png"))); // NOI18N
	}
	
	private void setNumPadButtonColor(){
		for(JButton button: numPadButtons){
			//button.setBackground(new Color(255, 255, 153));
		}
	}
	
	private void setSpecialCharButtonsColor() {
		for(JButton button: specialCharButtons){
			//button.setBackground(new Color(255, 255, 153));
			//button.setBackground(new Color(176, 217, 129));
		}	
	}
	

	/**
	 * @param args the command line arguments
	 */
	public void hideThis(){
		this.dispose();
		if(relatedComponent != null){
			relatedComponent.setVisible(false);
			relatedComponent = null;
		}
	}
	
	public String getInputText(){
		String textChar = txtInputField.getText();
		return textChar;
	}
	
	public String getPassInput(){
		char[] temp = txtPassField.getPassword();
		String myPass = new String(temp);
		temp = null;
		return myPass;
	}
	
	public void setInputText(String keyboardInput){
		String txtInput;
		txtInput = getInputText();		//get the current input chracters from the box
		txtInputField.setText(txtInput + keyboardInput);		//append chracters to the input box
		txtPassField.setText(getPassInput() + keyboardInput);
	}
	
	public void actionPerformed(ActionEvent e){
		Object source = e.getSource();
		if(source == btna) {setInputText(this.caps?"A":"a");}
		else if(source == btnb) {setInputText(this.caps?"B":"b");}
		else if(source == btnc) {setInputText(this.caps?"C":"c");}
		else if(source == btnd) {setInputText(this.caps?"D":"d");}
		else if(source == btne) {setInputText(this.caps?"E":"e");}
		else if(source == btnf) {setInputText(this.caps?"F":"f");}
		else if(source == btng) {setInputText(this.caps?"G":"g");}
		else if(source == btnh) {setInputText(this.caps?"H":"h");}
		else if(source == btni) {setInputText(this.caps?"I":"i");}
		else if(source == btnj) {setInputText(this.caps?"J":"j");}
		else if(source == btnk) {setInputText(this.caps?"K":"k");}
		else if(source == btnl) {setInputText(this.caps?"L":"l");}
		else if(source == btnm) {setInputText(this.caps?"M":"m");}
		else if(source == btnn) {setInputText(this.caps?"N":"n");}
		else if(source == btno) {setInputText(this.caps?"O":"o");}
		else if(source == btnp) {setInputText(this.caps?"P":"p");}
		else if(source == btnq) {setInputText(this.caps?"Q":"q");}
		else if(source == btnr) {setInputText(this.caps?"R":"r");}
		else if(source == btns) {setInputText(this.caps?"S":"s");}
		else if(source == btnt) {setInputText(this.caps?"T":"t");}
		else if(source == btnu) {setInputText(this.caps?"U":"u");}
		else if(source == btnv) {setInputText(this.caps?"V":"v");}
		else if(source == btnw) {setInputText(this.caps?"W":"w");}
		else if(source == btnx) {setInputText(this.caps?"X":"x");}
		else if(source == btny) {setInputText(this.caps?"Y":"y");}
		else if(source == btnz) {setInputText(this.caps?"Z":"z");}
		else if(source == btn0) {setInputText("0");}
		else if(source == btn1) {setInputText("1");}
		else if(source == btn2) {setInputText("2");}
		else if(source == btn3) {setInputText("3");}
		else if(source == btn4) {setInputText("4");}
		else if(source == btn5) {setInputText("5");}
		else if(source == btn6) {setInputText("6");}
		else if(source == btn7) {setInputText("7");}
		else if(source == btn8) {setInputText("8");}
		else if(source == btn9) {setInputText("9");}
		else if(source == btnAsc1) {setInputText("`");}
		else if(source == btnAsc2) {setInputText("~");}
		else if(source == btnAsc3) {setInputText("!");}
		else if(source == btnAsc4) {setInputText("#");}
		else if(source == btnAsc5) {setInputText("$");}
		else if(source == btnAsc6) {setInputText("%");}
		else if(source == btnAsc7) {setInputText("^");}
		else if(source == btnAsc8) {setInputText("&");}
		else if(source == btnAsc9) {setInputText("*");}
		else if(source == btnAsc10) {setInputText("(");}
		else if(source == btnAsc11) {setInputText(")");}
		else if(source == btnAsc12) {setInputText("-");}
		else if(source == btnAsc13) {setInputText("_");}
		else if(source == btnAt) {setInputText("@");}
		else if(source == btnApros) {setInputText(this.shift?"\"":"'");}
		else if(source == btnComma) {setInputText(this.shift?"<":",");}
		else if(source == btnFullStop) {setInputText(this.shift?">":".");}
		else if(source == btnLeftBracket) {setInputText(this.shift?"{":"[");}
		else if(source == btnRightBracket) {setInputText(this.shift?"}":"]");}
		else if(source == btnQuestion) {setInputText("?");}
		else if(source == btnR0) {setInputText("0");}
		else if(source == btnR00) {setInputText("00");}
		else if(source == btnR1) {setInputText("1");}
		else if(source == btnR2) {setInputText("2");}
		else if(source == btnR3) {setInputText("3");}
		else if(source == btnR4) {setInputText("4");}
		else if(source == btnR5) {setInputText("5");}
		else if(source == btnR6) {setInputText("6");}
		else if(source == btnR7) {setInputText("7");}
		else if(source == btnR8) {setInputText("8");}
		else if(source == btnR9) {setInputText("9");}
		else if(source == btnRStop) {setInputText(".");}
		else if(source == btnSemiColumn) {setInputText(this.shift?":":";");}
		else if(source == btnSlash) {setInputText("/");}
		else if(source == btnSpace) {setInputText(" ");}
		else if(source == btnequals) {setInputText(this.shift?"+":"=");}
		else if(source == btnCaps) {this.caps = !this.caps; setCaps();}
		else if(source == btnShift) {this.shift = !this.shift; setShfit();}
		else if(source == btnBackSpace) {
			try {
				int sLength, sLength2;
				position = 0;
				int position2 = 0;
				
				String tempString;
				String tempString2;
				String returnString;
				String returnString2;
				
				tempString = getInputText();
				tempString2 = getPassInput();
				
				sLength = tempString.length();
				position = txtInputField.getCaretPosition();
				sLength2 = tempString2.length();
				position2 = txtPassField.getCaretPosition();
				
				
				returnString = sLength>0?tempString.substring(0, position - 1) + tempString.substring(position, sLength) : tempString;
				txtInputField.setText(returnString);
				
				returnString2 = sLength2>0?tempString2.substring(0, position2 - 1) + tempString2.substring(position2, sLength2) : tempString2;
				txtPassField.setText(returnString2);
				
				if(position>0){
					if(txtPassField.isVisible()) {
						txtPassField.setCaretPosition(position2-1);
					} else {
						txtInputField.setCaretPosition(position-1);
					}
				}
			} catch(StringIndexOutOfBoundsException e1) {
				e1.printStackTrace();
			}
		}
		
		if(txtPassField.isVisible()) {
			txtPassField.requestFocusInWindow();
		} else {
			txtInputField.requestFocusInWindow();
		}
		
	}
	
	private void setCaps() {
		if(this.caps) {
			btna.setText("A");
			btnb.setText("B");
			btnc.setText("C");
			btnd.setText("D");
			btne.setText("E");
			btnf.setText("F");
			btng.setText("G");
			btnh.setText("H");
			btni.setText("I");
			btnj.setText("J");
			btnk.setText("K");
			btnl.setText("L");
			btnm.setText("M");
			btnn.setText("N");
			btno.setText("O");
			btnp.setText("P");
			btnq.setText("Q");
			btnr.setText("R");
			btns.setText("S");
			btnt.setText("T");
			btnu.setText("U");
			btnv.setText("V");
			btnw.setText("W");
			btnx.setText("X");
			btny.setText("Y");
			btnz.setText("Z");
		}
		else {
			btna.setText("a");
			btnb.setText("b");
			btnc.setText("c");
			btnd.setText("d");
			btne.setText("e");
			btnf.setText("f");
			btng.setText("g");
			btnh.setText("h");
			btni.setText("i");
			btnj.setText("j");
			btnk.setText("k");
			btnl.setText("l");
			btnm.setText("m");
			btnn.setText("n");
			btno.setText("o");
			btnp.setText("p");
			btnq.setText("q");
			btnr.setText("r");
			btns.setText("s");
			btnt.setText("t");
			btnu.setText("u");
			btnv.setText("v");
			btnw.setText("w");
			btnx.setText("x");
			btny.setText("y");
			btnz.setText("z");
		}
	}
	
	private void setShfit() {
		if(this.shift) {
			btnApros.setText("\"");
			btnComma.setText("<");
			btnFullStop.setText(">");
			btnLeftBracket.setText("{");
			btnRightBracket.setText("}");
			
			btnSemiColumn.setText(":");
			btnequals.setText("+");
		} else {
			btnApros.setText("'");
			btnComma.setText(",");
			btnFullStop.setText(".");
			btnLeftBracket.setText("[");
			btnRightBracket.setText("]");
			
			btnSemiColumn.setText(";");
			btnequals.setText("=");
		}
	}
	
//	public static void main(String args[]) {
//		EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				new AlphaNumKeyBoard().setVisible(true);
//			}
//		});
//	}

	public void setLabel(String s) {
		lblGetterText.setText(s);
	}
	
	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	/**
	 * @uml.property  name="btn0"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn0;
	/**
	 * @uml.property  name="btn1"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn1;
	/**
	 * @uml.property  name="btn2"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn2;
	/**
	 * @uml.property  name="btn3"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn3;
	/**
	 * @uml.property  name="btn4"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn4;
	/**
	 * @uml.property  name="btn5"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn5;
	/**
	 * @uml.property  name="btn6"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn6;
	/**
	 * @uml.property  name="btn7"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn7;
	/**
	 * @uml.property  name="btn8"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn8;
	/**
	 * @uml.property  name="btn9"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btn9;
	/**
	 * @uml.property  name="btnApros"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnApros;
	/**
	 * @uml.property  name="btnAsc1"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc1;
	/**
	 * @uml.property  name="btnAsc10"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc10;
	/**
	 * @uml.property  name="btnAsc11"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc11;
	/**
	 * @uml.property  name="btnAsc12"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc12;
	/**
	 * @uml.property  name="btnAsc13"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc13;
	/**
	 * @uml.property  name="btnAsc2"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc2;
	/**
	 * @uml.property  name="btnAsc3"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc3;
	/**
	 * @uml.property  name="btnAsc4"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc4;
	/**
	 * @uml.property  name="btnAsc5"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc5;
	/**
	 * @uml.property  name="btnAsc6"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc6;
	/**
	 * @uml.property  name="btnAsc7"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc7;
	/**
	 * @uml.property  name="btnAsc8"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc8;
	/**
	 * @uml.property  name="btnAsc9"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAsc9;
	/**
	 * @uml.property  name="btnAt"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnAt;
	/**
	 * @uml.property  name="btnBackSpace"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnBackSpace;
	/**
	 * @uml.property  name="btnCaps"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnCaps;
	/**
	 * @uml.property  name="btnComma"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnComma;
	/**
	 * @uml.property  name="btnDown"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnDown;
	/**
	 * @uml.property  name="btnEmpty1"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnEmpty1;
	/**
	 * @uml.property  name="btnEmpty2"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnEmpty2;
	/**
	 * @uml.property  name="btnEmpty3"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnEmpty3;
	/**
	 * @uml.property  name="btnEmpty4"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnEmpty4;
	/**
	 * @uml.property  name="btnEmpty5"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnEmpty5;
	/**
	 * @uml.property  name="btnEnter"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnEnter;
	/**
	 * @uml.property  name="btnFullStop"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
	private JButton btnFullStop;
	private JButton btnLeft;
	private JButton btnLeftBracket;
	private JButton btnQuestion;
	private JButton btnR0;
	private JButton btnR00;
	private JButton btnR1;
	private JButton btnR2;
	private JButton btnR3;
	private JButton btnR4;
	private JButton btnR5;
	private JButton btnR6;
	private JButton btnR7;
	private JButton btnR8;
	private JButton btnR9;
	private JButton btnREnter;
	private JButton btnRStop;
	private JButton btnRight;
	private JButton btnRightBracket;
	private JButton btnSemiColumn;
	private JButton btnShift;
	private JButton btnSlash;
	private JButton btnSpace;
	private JButton btnUp;
	private JButton btna;
	private JButton btnb;
	private JButton btnc;
	private JButton btnd;
	private JButton btne;
	private JButton btnequals;
	private JButton btnf;
	private JButton btng;
	private JButton btnh;
	private JButton btni;
	private JButton btnj;
	private JButton btnk;
	private JButton btnl;
	private JButton btnm;
	private JButton btnn;
	private JButton btno;
	private JButton btnp;
	private JButton btnq;
	private JButton btnr;
	private JButton btns;
	private JButton btnt;
	private JButton btnu;
	private JButton btnv;
	private JButton btnw;
	private JButton btnx;
	private JButton btny;
	private JButton btnz;
	private JButton btnDelete;
	private JButton btnEsc;
	private JButton btnBesideEsc;
	private JPanel jplKeyBoardPanel;
	public JLabel lblGetterText;
	public JTextField txtInputField;
	public JPasswordField txtPassField;

	@Override
	public void keyPressed(KeyEvent arg0) {
		
	}

	@Override
	public void keyReleased(KeyEvent e) {
		if(e.getKeyCode() == 10) {
			enterListener.actionPerformed(null);
		}
		else if(e.getKeyCode() == 27) {
			escListener.actionPerformed(null);
		}
	}

	@Override
	public void keyTyped(KeyEvent e) {
		
	}

	public void setLoginName(boolean loginName) {
		this.loginName = loginName;
	}

	public boolean isLoginName() {
		return loginName;
	}

	public void setLoginPassword(boolean loginPassword) {
		this.loginPassword = loginPassword;
	}

	public boolean isLoginPassword() {
		return loginPassword;
	}

	private class EnterListener implements ActionListener {
		public void actionPerformed(ActionEvent e){
			hideThis();
			boolean loginname = isLoginName();
			setLoginName(false);
			setLoginPassword(false);
		}
	}
	
	private class EscListener implements ActionListener {
		public void actionPerformed(ActionEvent e){
			txtInputField.setText("");
			txtPassField.setText("");
			hideThis();
		}
	}
}